trigger:
  batch: true
  
pool:
  vmImage: 'ubuntu-18.04'

variables:
- name: major
  value: 1
- name: minor
  value: 5

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

stages:

  - template: _versioning.yml

  - stage: Build
    displayName: 'Build Code and Run Unit Tests'
    variables:
    - name: 'buildConfiguration'
      value: 'Release'
    - name: informationalVersion
      value: $(Build.BuildNumber)
    - name: assemblyVersion
      value: $(Build.BuildNumber)
    - name: assemblyDefaultVersion
      value: $[ format('{0}.{1}', variables['major'], variables['minor']) ]

    jobs:
  
    - job: Build
      displayName: 'Build Code and run Unit Tests'

      steps:

      - bash: | 
          echo Version: $(assemblyDefaultVersion)
          echo '##vso[task.setvariable variable=assemblyVersion]$(assemblyDefaultVersion)'
        condition: contains(variables['Build.BuildNumber'], '-')
        displayName: 'fix assembly version'

      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '5.x'
          includePreviewVersions: false

      - task: DotNetCoreCLI@2
        displayName: dotnet restore
        inputs:
          command: 'restore'
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          command: 'build'
          projects: 'src/affolterNET.Data.sln'
          arguments: '--configuration $(buildConfiguration) -p:Version=$(assemblyVersion) -p:InformationalVersion=$(informationalVersion)'

      - task: DotNetCoreCLI@2
        displayName: 'run unit tests'
        inputs:
          command: test
          projects: '**/Test/*.Test/*.Test.csproj'
          arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" --settings src/Test/coverlet.runsettings'

      - task: DotNetCoreCLI@2
        displayName: 'nuget pack'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
        inputs:
          command: 'pack'
          packagesToPack: 'src/**/*.csproj;!**/Test/*.csproj'
          versioningScheme: 'byBuildNumber'

      - task: DotNetCoreCLI@2
        displayName: 'nuget push'
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: 'e27a58c6-e50a-44d8-a798-55c10e05709c'

      - task: git-tag-on-release-task@9
        displayName: "add tag to git"
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
        inputs:
          staticTagName: "nuget-$(Build.BuildNumber)"
          